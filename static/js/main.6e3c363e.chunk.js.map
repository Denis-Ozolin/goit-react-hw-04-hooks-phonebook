{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Form","styled","form","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","eventName","eventValue","value","reset","preventDefault","htmlFor","id","onChange","type","pattern","title","required","List","ul","ContactList","contacts","onDelete","length","map","onClick","InputContainer","div","Filter","onGetValue","Container","AppTitle","h1","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","onCheckUniqueName","find","alert","state","uuidv4","data","toLocaleLowerCase","includes","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e3c363e.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & > div{\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    width: 320px;\n    margin-bottom: 20px;\n  }\n\n  & input {\n    width: 204px;\n    padding: 10px;\n  }\n\n  & button {\n    margin-bottom: 20px;\n    padding: 8px 16px;\n    background-color: slategrey;\n    color: azure;\n    font-size: 18px;\n    border-color: azure;\n    cursor: pointer;\n    transition: background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  }\n\n  & button:hover{\n    background-color: #24bd57;\n  }\n`;\n","import { useState } from 'react';\nimport { Form } from './ContactForm.styled';\n\nexport function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name: eventName, value: eventValue } = event.currentTarget;\n\n    switch (eventName) {\n      case 'name':\n        setName(eventValue);\n        break;\n      case 'number':\n        setNumber(eventValue);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(name, number);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"number\">Number</label>\n        <input\n          id=\"number\"\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </div>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 424px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  & li {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n\n    & p{\n      color: azure;\n    }\n\n    & button {\n      width: 100px;\n      padding: 8px 16px;\n      background-color: slategrey;\n      border-color: azure;\n      color: azure;\n      font-size: 16px;\n      cursor: pointer;\n      transition: background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n\n    & button:hover{\n      background-color: tomato;\n    }\n  }\n`;\n","import { List } from './ContactList.styled';\n\nexport const ContactList = ({ title, contacts, onDelete = null }) => {\n  return (\n    <>\n      <h2>{title}:</h2>\n      <List>\n        {contacts.length &&\n          contacts.map(({ id, name, number }) => (\n            <li key={id}>\n              <p>\n                {name}: {number}\n              </p>\n              {onDelete && (\n                <button type=\"button\" onClick={() => onDelete(id)}>\n                  delete\n                </button>\n              )}\n            </li>\n          ))}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InputContainer = styled.div`\n  margin: 0;\n  margin-left: -108px;\n  padding: 0;\n  text-align: center;\n\n  & input {\n    width: 204px;\n    margin-left: 24px;\n    padding: 10px;\n  }\n`;\n","import { InputContainer } from './Filter.styled';\n\nexport const Filter = ({ onGetValue }) => {\n  const handleChange = event => {\n    const { value } = event.currentTarget;\n\n    onGetValue(value);\n  };\n\n  return (\n    <InputContainer>\n      <label>\n        Find contacts by name\n        <input onChange={handleChange} type=\"text\" />\n      </label>\n    </InputContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const AppTitle = styled.h1`\n  text-align: center;\n  margin: 0;\n  margin-bottom: 24px;\n  padding: 0;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: color 2000ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover{\n    color: #24bd57;\n  }\n`;\n","import { v4 as uuidv4 } from 'uuid';\nimport { useState, useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, AppTitle } from './App.styled';\n\nexport function App() {\n  const [contacts, setContacts] = useState(() => JSON.parse(localStorage.getItem('contacts')));\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (name, number) => {\n    onCheckUniqueName(name)\n      ? alert(`${name} is alredy in contacts.`)\n      : setContacts(state => [\n          {\n            id: uuidv4(),\n            name,\n            number,\n          },\n          ...state,\n        ]);\n  };\n\n  const filterUpdateHandler = data => {\n    setFilter(data);\n  };\n\n  const onCheckUniqueName = value => {\n    return contacts.find(({ name }) => name === value);\n  };\n\n  const filterContactsHandler = () => {\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  const onDeleteContact = id => {\n    setContacts(state => state.filter(contact => contact.id !== id));\n  };\n\n  return (\n    <Container>\n      <AppTitle>Phonebook</AppTitle>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <Filter onGetValue={filterUpdateHandler} />\n      {!filter ? (\n        <ContactList title=\"Contacts\" contacts={contacts} onDelete={onDeleteContact} />\n      ) : (\n        <ContactList title=\"Searched contacts\" contacts={filterContactsHandler()} />\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}