{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Form","styled","form","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","id","onChange","type","pattern","title","required","Component","List","ul","ContactList","contacts","onDelete","length","map","onClick","InputContainer","div","Filter","onGetValue","Container","AppTitle","h1","App","filter","formSubmitHandler","onCheckUniqueName","alert","uuidv4","filterUpdateHandler","data","find","filterContactsHandler","toLocaleLowerCase","includes","onDeleteContact","prevState","contact","localStorage","getItem","parsedContacts","JSON","parse","_","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAEaA,EAAOC,IAAOC,KAAV,snB,OCCJC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,KAT5B,EAYEE,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKX,OAEzB,EAAKY,SAjBT,EAoBEA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,MArBtC,4CAwBE,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,eAACN,EAAD,CAAMe,SAAUE,KAAKL,aAArB,UACE,gCACE,uBAAOM,QAAQ,OAAf,kBACA,uBACEC,GAAG,OACHC,SAAUH,KAAKV,aACfG,MAAOL,EACPgB,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,gCACA,uBAAON,QAAQ,SAAf,oBACA,uBACIC,GAAG,SACHC,SAAUH,KAAKV,aACfG,MAAOJ,EACPe,KAAK,MACLhB,KAAK,SACLiB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAAb,gCAvDR,GAAiCI,aCDpBC,EAAOzB,IAAO0B,GAAV,kkBCAJC,EAAc,SAAC,GAAmC,IAAjCL,EAAgC,EAAhCA,MAAOM,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7C,OACE,qCACE,+BAAKP,EAAL,OACA,cAACG,EAAD,UACGG,EAASE,OACNF,EAASG,KAAI,gBAAGb,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACX,+BACE,8BAAID,EAAJ,KAAYC,KACZ,wBAAQe,KAAK,SAASY,QAAS,kBAAMH,EAASX,IAA9C,sBAFOA,MAOX,WCdCe,EAAiBjC,IAAOkC,IAAV,2LCCdC,EAAb,4MACEhC,MAAQ,CACNM,MAAO,IAFX,EAKEH,aAAe,SAAAC,GACb,IAAQE,EAAUF,EAAMC,cAAhBC,MAER,EAAKC,SAAS,CAAED,UAEhB,EAAKI,MAAMuB,WAAW3B,IAV1B,4CAaE,WACE,IAAQA,EAAUO,KAAKb,MAAfM,MACR,OACE,cAACwB,EAAD,UACE,0DAEE,uBAAOd,SAAUH,KAAKV,aAAcG,MAAOA,EAAOW,KAAK,kBAnBjE,GAA4BI,aCDfa,EAAYrC,IAAOkC,IAAV,mDAITI,EAAWtC,IAAOuC,GAAV,6PCCRC,EAAb,4MACErC,MAAQ,CACNyB,SAAU,CACR,CAAEV,GAAI,OAAQd,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEa,GAAI,OAAQd,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEa,GAAI,OAAQd,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEa,GAAI,OAAQd,KAAM,iBAAkBC,OAAQ,cAEhDoC,OAAQ,IARZ,EA6BEC,kBAAoB,YAAuB,IAApBtC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3B,EAAKsC,kBAAkBvC,GACnBwC,MAAM,GAAD,OAAIxC,EAAJ,4BACL,EAAKM,UAAS,gBAAGkB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CACP,CACEV,GAAI2B,cACJzC,OACAC,WAJI,mBAMHuB,SAvCf,EA4CEkB,oBAAsB,SAAAC,GACpB,EAAKrC,SAAS,CACZ+B,OAAQM,KA9Cd,EAkDEJ,kBAAoB,SAAAlC,GAGlB,OAFqB,EAAKN,MAAlByB,SAEQoB,MAAK,qBAAG5C,OAAoBK,MArDhD,EAwDEwC,sBAAwB,WACtB,MAA6B,EAAK9C,MAA1ByB,EAAR,EAAQA,SAAUa,EAAlB,EAAkBA,OAElB,OAAOb,EAASa,QAAO,qBAAGrC,KACnB8C,oBAAoBC,SAASV,EAAOS,yBA5D/C,EAgEEE,gBAAkB,SAAAlC,GAChB,EAAKR,UAAS,SAAA2C,GAAS,MAAK,CAC1BzB,SAAUyB,EAAUzB,SAASa,QAAO,SAAAa,GAAO,OAAIA,EAAQpC,KAAOA,UAlEpE,uDAWE,WACE,IAAMU,EAAW2B,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAM/B,GAE9B6B,GACFzC,KAAKN,SAAS,CACZkB,SAAU6B,MAjBlB,gCAqBE,SAAmBG,EAAGP,GACpB,IAAQzB,EAAaZ,KAAKb,MAAlByB,SAEJA,EAASE,SAAWuB,EAAUzB,SAASE,QACzCyB,aAAaM,QAAQ,WAAYH,KAAKI,UAAUlC,MAzBtD,oBAsEE,WACE,MAA6BZ,KAAKb,MAA1ByB,EAAR,EAAQA,SAAUa,EAAlB,EAAkBA,OAElB,OACE,eAACJ,EAAD,WACE,cAACC,EAAD,wBACA,cAAC,EAAD,CAAaxB,SAAUE,KAAK0B,oBAC5B,cAAC,EAAD,CAAQN,WAAYpB,KAAK8B,sBACvBL,EAGA,cAAC,EAAD,CACEnB,MAAM,oBACNM,SAAUZ,KAAKiC,wBACfpB,SAAUb,KAAKoC,kBALjB,cAAC,EAAD,CAAa9B,MAAM,WAAWM,SAAUA,EAAUC,SAAUb,KAAKoC,yBA/E3E,GAAyB5B,aCFzBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba3f333c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & > div{\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    width: 320px;\n    margin-bottom: 20px;\n  }\n\n  & input {\n    width: 204px;\n    padding: 10px;\n  }\n\n  & button {\n    margin-bottom: 20px;\n    padding: 8px 16px;\n    background-color: slategrey;\n    color: azure;\n    font-size: 18px;\n    border-color: azure;\n    cursor: pointer;\n    transition: background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  }\n\n  & button:hover{\n    background-color: #24bd57;\n  }\n`;\n","import React, { Component } from 'react';\nimport { Form } from './ContactForm.styled';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name</label>        \n          <input\n            id=\"name\"\n            onChange={this.handleChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </div>\n        <div>\n        <label htmlFor=\"number\">Number</label>\n        <input\n            id=\"number\"\n            onChange={this.handleChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />  \n        </div>    \n        <button type=\"submit\">Add contact</button>\n      </Form>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 424px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  & li {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n\n    & p{\n      color: azure;\n    }\n\n    & button {\n      width: 100px;\n      padding: 8px 16px;\n      background-color: slategrey;\n      border-color: azure;\n      color: azure;\n      font-size: 16px;\n      cursor: pointer;\n      transition: background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n\n    & button:hover{\n      background-color: tomato;\n    }\n  }\n`;\n","import { List } from './ContactList.styled';\n\nexport const ContactList = ({ title, contacts, onDelete }) => {\n  return (\n    <>\n      <h2>{title}:</h2>\n      <List>\n        {contacts.length\n          ? contacts.map(({ id, name, number }) => (\n              <li key={id}>\n                <p>{name}: {number}</p>\n                <button type=\"button\" onClick={() => onDelete(id)}>\n                  delete\n                </button>\n              </li>\n            ))\n          : null}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InputContainer = styled.div`\n  margin: 0;\n  margin-left: -108px;\n  padding: 0;\n  text-align: center;\n\n  & input {\n    width: 204px;\n    margin-left: 24px;\n    padding: 10px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { InputContainer } from './Filter.styled';\n\nexport class Filter extends Component {\n  state = {\n    value: '',\n  };\n\n  handleChange = event => {\n    const { value } = event.currentTarget;\n\n    this.setState({ value });\n\n    this.props.onGetValue(value);\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <InputContainer>\n        <label>\n          Find contacts by name\n          <input onChange={this.handleChange} value={value} type=\"text\" />\n        </label>\n      </InputContainer>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const AppTitle = styled.h1`\n  text-align: center;\n  margin: 0;\n  margin-bottom: 24px;\n  padding: 0;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: color 2000ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover{\n    color: #24bd57;\n  }\n`;\n","import { v4 as uuidv4 } from 'uuid';\nimport { Component } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, AppTitle } from './App.styled';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    \n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n    })}\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts.length !== prevState.contacts.length) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    this.onCheckUniqueName(name)\n      ? alert(`${name} is alredy in contacts.`)\n      : this.setState(({ contacts }) => ({\n          contacts: [\n            {\n              id: uuidv4(),\n              name,\n              number,\n            },\n            ...contacts,\n          ],\n        }));\n  };\n\n  filterUpdateHandler = data => {\n    this.setState({\n      filter: data,\n    });\n  };\n\n  onCheckUniqueName = value => {\n    const { contacts } = this.state;\n\n    return contacts.find(({ name }) => name === value);\n  };\n\n  filterContactsHandler = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  onDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <Container>\n        <AppTitle>Phonebook</AppTitle>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <Filter onGetValue={this.filterUpdateHandler} />\n        {!filter ? (\n          <ContactList title=\"Contacts\" contacts={contacts} onDelete={this.onDeleteContact} />\n        ) : (\n          <ContactList\n            title=\"Searched contacts\"\n            contacts={this.filterContactsHandler()}\n            onDelete={this.onDeleteContact}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}